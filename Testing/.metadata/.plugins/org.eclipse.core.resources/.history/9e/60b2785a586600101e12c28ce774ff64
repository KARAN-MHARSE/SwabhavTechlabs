package com.aurionpro.foodify.utils;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;

import com.aurionpro.foodify.exceptions.FoodItemNotFoundException;
import com.aurionpro.foodify.models.FoodItem;

public class DataStorageManagement {
	public static final String filepath= "D:\\SwabhavTraining\\Mini project\\Foodify\\src\\com\\aurionpro\\foodify\\file.txt";
	
	public static void saveFoodItemsToLocal(List<FoodItem> items) {
		FileOutputStream fileOutputStream=null;
		ObjectOutputStream objectOutputStream = null;
		try {
			fileOutputStream = new FileOutputStream(filepath);
			objectOutputStream = new ObjectOutputStream(fileOutputStream);
			
			for(FoodItem item : items) {
				objectOutputStream.writeObject(item);
			}
			
			objectOutputStream.close();
			fileOutputStream.close();
			
		} catch (Exception e) {
			System.out.println("Something went wrong in saveFoodItemsToLocal");
		}		
	}
	
	public static List<FoodItem> getFoodItemsFromLocal() {
		List<FoodItem> items = new ArrayList<FoodItem>();
		try {
			FileInputStream fileInputStream = new FileInputStream(filepath);
			ObjectInputStream objectInputStream = new ObjectInputStream(fileInputStream);
			
			while(true) {
				try {
					FoodItem item = ((FoodItem)objectInputStream.readObject());
					items.add(item);
				} catch (Exception e) {
					// TODO: handle exception
				}
			}
			
		
		} 
		catch (EOFException e) {
			break;
		}

		catch (Exception e) {
			System.out.println("Something went wrong in saveFoodItemsToLocal");
		}	
		return items;
	}
	
	public void addNewFoodItemToLocalFile(FoodItem item) {
		List<FoodItem> items = getFoodItemsFromLocal();
		if(items == null) items = new ArrayList<FoodItem>();
		
		try {
			FileOutputStream outputStream = new FileOutputStream(filepath);
			ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);
			
			for(FoodItem i : items) {
				objectOutputStream.writeObject(i);
			}
			objectOutputStream.writeObject(item);
			
			objectOutputStream.close();
			outputStream.close();
			
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		
	}
	
	
	public static FoodItem getFoodItemById(int id) {
		List<FoodItem> items = getFoodItemsFromLocal();
		if(items == null) throw new FoodItemNotFoundException();
		
		try {
			FileInputStream fileInputStream = new FileInputStream(filepath);
			ObjectInputStream objectInputStream = new ObjectInputStream(fileInputStream);
			
			try {
				while(true) {
					FoodItem item = (FoodItem) objectInputStream.readObject();
					if(item.getId() == id) return item;
				}
					
			} catch (Exception e) {
				System.err.println("Something went wrong");
			}
			
			
		} catch (Exception e) {
			System.err.println("Product not found");
		}
		return null;
		
	}
	
}
